# Guido van Rossum <guido@python.org>

def step1():
    """–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ"""
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    legend(step2_umbrella, step2_no_umbrella)


def legend(function1, function2):
    """–í—ã–∑—ã–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
    if options[option]:
        function1()
    else:
        function2()


def step2_umbrella():
    """–í–µ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏, –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –æ—Ç–≤–µ—Ç–∞ –î–∞"""
    print(
        '–ù–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –º–∞–ª—è—Ä —Å–æ–≤—Å–µ–º –∑–∞–±—ã–ª, —á—Ç–æ –≤ –µ–≥–æ —Å–µ–º—å–µ '
        '–∑–æ–Ω—Ç–∏–∫ –∏–º–µ–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —É –∂–µ–Ω—ã, –∏ –±—ã–ª –ø–æ–π–º–∞–Ω —Å –ø–æ–ª–∏—á–Ω—ã–º.\n'
        '–û–¥–Ω–∞–∫–æ, –Ω–∞—à –≥–µ—Ä–æ–π –≤—ã–∫—Ä—É—Ç–∏–ª—Å—è –∏ —Å–∫–∞–∑–∞–ª, —á—Ç–æ –∏–¥–µ—Ç –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.\n'
        '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–º–æ—á—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ü–æ–º–æ–∂–µ—Ç–µ?'
    )
    legend(cost_of_products, sad_story)


def step2_no_umbrella():
    """–í–µ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏, –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –æ—Ç–≤–µ—Ç–∞ –ù–µ—Ç"""
    print(
        '–ü—Ä–µ–∂–¥–µ, —á–µ–º –∏–¥—Ç–∏ –≤ –±–∞—Ä, –Ω—É–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –≤—ã–ø–∏—Ç—å!\n'
        '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏–≤–∞, '
        '–∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –≤—ã–ø–∏—Ç—å —É—Ç–∫–µ, –∑–Ω–∞—è –µ–µ –≤–µ—Å. –ü–æ–º–æ–∂–µ—Ç–µ?'
    )
    legend(amount_of_beer, sad_story_2)


def cost_of_products():
    """–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–∫—É–ø–∫–∏, –∏—Å—Ö–æ–¥—è –∏–∑ —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    products = {'milk': 60, 'bread': 55, 'cookies': 120}
    print(
        '–°–∫–æ–ª—å–∫–æ –±—É–¥–µ–º –±—Ä–∞—Ç—å –º–æ–ª–æ–∫–∞, —Ö–ª–µ–±–∞ –∏ –ø–µ—á–µ–Ω–µ–∫?\n'
        '–í–≤–µ–¥–∏—Ç–µ 3 —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª'
    )
    milk, bread, cookies = map(int, input().split())
    desired_value = (products['milk'] * milk +
                     products['bread'] * bread +
                     products['cookies'] * cookies)
    print('–ù–∞—à–µ–π —É—Ç–∫–µ –Ω—É–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å {} —Ä–æ–¥–Ω—ã—Ö —Ä—É–±–ª–µ–π'.format(desired_value))


def amount_of_beer():
    """–†–∞—Å—á–µ—Ç –ø–æ—Ä–æ–≥–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ –∫—Ä—É–∂–µ–∫ –ø–∏–≤–∞ –¥–ª—è —É—Ç–∫–∏ –ø—Ä–∏ –¥–∞–Ω–Ω–æ–º –≤–µ—Å–µ"""
    print('–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å —É—Ç–∫–∏ –≤ –∫–≥')
    weight_of_duck = int(input())
    desired_amount = int((weight_of_duck / 4) / 0.5) + 1
    print('–ù–∞—à–µ–π —É—Ç–∫–µ –º–æ–∂–Ω–æ –≤—ã–ø–∏—Ç—å {} –ø–∏–≤–∞'.format(desired_amount))


def sad_story():
    """–¢–µ–∫—Å—Ç –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–º–æ–≥–∞—Ç—å —É—Ç–∫–µ"""
    print(
        '–ü–æ —Ä–∞–¥–∏–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –æ –±—ã—Ç–æ–≤–æ–π —Å—Å–æ—Ä–µ –Ω–∞ –ø–æ—á–≤–µ '
        '–Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ–º–µ–π–Ω—ã—Ö —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π.\n'
        '–í –≥–æ—Å–ø–∏—Ç–∞–ª—å –ø–æ—Å—Ç—É–ø–∏–ª–∞ —É—Ç–∫–∞-–º–∞–ª—è—Ä —Å —Ç—è–∂–µ–ª—ã–º–∏ —Ç–µ–ª–µ—Å–Ω—ã–º–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏'
    )


def sad_story_2():
    """–¢–µ–∫—Å—Ç –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–º–æ–≥–∞—Ç—å —É—Ç–∫–µ - 2"""
    print(
        '–ü–æ —Ä–∞–¥–∏–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –æ –Ω–∞–ø–∞–¥–µ–Ω–∏—è—Ö –≤—É—Å–º–µ—Ä—Ç—å –ø—å—è–Ω–æ–π —É—Ç–∫–∏ –Ω–∞ –ø—Ä–æ—Ö–æ–∂–∏—Ö.\n'
        '–ü–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —Å–µ–º—å –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏—Ö –ø–∞—Ç—Ä—É–ª–µ–π, —á—Ç–æ–±—ã —É—Å–º–∏—Ä–∏—Ç—å –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∞'
    )


if __name__ == '__main__':
    step1()
